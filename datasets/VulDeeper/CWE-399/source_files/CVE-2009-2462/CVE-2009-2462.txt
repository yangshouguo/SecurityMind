diff --git a/dom/src/offline/nsDOMOfflineResourceList.cpp b/dom/src/offline/nsDOMOfflineResourceList.cpp
--- a/dom/src/offline/nsDOMOfflineResourceList.cpp
+++ b/dom/src/offline/nsDOMOfflineResourceList.cpp
@@ -818,57 +818,72 @@ nsDOMOfflineResourceList::RemoveEventLis
 NS_IMETHODIMP
 nsDOMOfflineResourceList::DispatchEvent(nsIDOMEvent *evt, PRBool *_retval)
 {
   // Ignored
 
   return NS_OK;
 }
 
+static nsresult
+CheckInnerWindowCorrectness(nsPIDOMWindow* aOwner)
+{
+  NS_ASSERTION(aOwner->IsInnerWindow(), "Should have inner window here!\n");
+  NS_ENSURE_STATE(aOwner && aOwner->GetOuterWindow() &&
+                  aOwner->GetOuterWindow()->GetCurrentInnerWindow() == aOwner);
+  return NS_OK;
+}
+
 void
 nsDOMOfflineResourceList::NotifyEventListeners(nsIDOMEventListener *aListener,
                                                const nsCOMArray<nsIDOMEventListener>& aListeners,
                                                nsIDOMEvent* aEvent)
 {
   // XXXbz wouldn't it be easier to just have an actual nsEventListenerManager
   // to work with or something?  I feel like we're duplicating code here...
   //
   // (and this was duplicated from XMLHttpRequest)
   if (!aEvent)
     return;
 
   nsCOMPtr<nsIJSContextStack> stack;
   JSContext *cx = nsnull;
 
   nsCOMPtr<nsIScriptGlobalObject> scriptGlobal = do_QueryReferent(mWindow);
-  if (!scriptGlobal)
+  nsCOMPtr<nsPIDOMWindow> owner = do_QueryReferent(mWindow);
+  if (!scriptGlobal ||  NS_FAILED(CheckInnerWindowCorrectness(owner)))
     return;
 
   nsCOMPtr<nsIScriptContext> context = scriptGlobal->GetContext();
   if (context) {
     stack = do_GetService("@mozilla.org/js/xpc/ContextStack;1");
 
     if (stack) {
       cx = (JSContext *)context->GetNativeContext();
 
       if (cx) {
         stack->Push(cx);
       }
     }
   }
 
+  nsCOMArray<nsIDOMEventListener> listeners = aListeners;
+  PRInt32 count = listeners.Count();
+
   if (aListener) {
     aListener->HandleEvent(aEvent);
   }
 
-  PRInt32 count = aListeners.Count();
   for (PRInt32 index = 0; index < count; ++index) {
-    nsIDOMEventListener* listener = aListeners[index];
+    nsIDOMEventListener* listener = listeners[index];
 
     if (listener) {
+      if (NS_FAILED(CheckInnerWindowCorrectness(owner))) {
+         break;
+      }
       listener->HandleEvent(aEvent);
     }
   }
 
   if (cx) {
     stack->Pop(&cx);
   }
 }
