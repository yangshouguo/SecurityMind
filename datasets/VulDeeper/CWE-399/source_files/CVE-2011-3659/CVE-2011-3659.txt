diff --git a/content/base/src/nsDOMAttribute.cpp b/content/base/src/nsDOMAttribute.cpp
--- a/content/base/src/nsDOMAttribute.cpp
+++ b/content/base/src/nsDOMAttribute.cpp
@@ -695,23 +695,17 @@ nsDOMAttribute::AppendChildTo(nsIContent
 
 nsresult
 nsDOMAttribute::RemoveChildAt(PRUint32 aIndex, bool aNotify)
 {
   if (aIndex != 0 || !mChild) {
     return NS_OK;
   }
 
-  {
-    nsCOMPtr<nsIContent> child = mChild;
-    nsMutationGuard::DidMutate();
-    mozAutoDocUpdate updateBatch(OwnerDoc(), UPDATE_CONTENT_MODEL, aNotify);
-
-    doRemoveChild(aNotify);
-  }
+  doRemoveChild(aNotify);
 
   nsString nullString;
   SetDOMStringToNull(nullString);
   SetValue(nullString);
   return NS_OK;
 }
 
 nsresult
@@ -779,17 +773,25 @@ void
 nsDOMAttribute::Shutdown()
 {
   sInitialized = false;
 }
 
 void
 nsDOMAttribute::doRemoveChild(bool aNotify)
 {
+  NS_ASSERTION(mChild && mFirstChild, "Why are we here?");
+  NS_ASSERTION(mChild == mFirstChild, "Something got out of sync!");
+
+  nsRefPtr<nsTextNode> child = static_cast<nsTextNode*>(mChild);
+  nsMutationGuard::DidMutate();
+  mozAutoDocUpdate updateBatch(OwnerDoc(), UPDATE_CONTENT_MODEL, aNotify);
+
+  NS_RELEASE(mChild);
+  mFirstChild = nsnull;
+
   if (aNotify) {
-    nsNodeUtils::AttributeChildRemoved(this, mChild);
+    nsNodeUtils::AttributeChildRemoved(this, child);
   }
 
-  static_cast<nsTextNode*>(mChild)->UnbindFromAttribute();
-  NS_RELEASE(mChild);
-  mFirstChild = nsnull;
+  child->UnbindFromAttribute();
 }
 
