diff --git a/content/svg/content/src/DOMSVGLength.cpp b/content/svg/content/src/DOMSVGLength.cpp
index 493be7a..2779031 100644
--- a/content/svg/content/src/DOMSVGLength.cpp
+++ b/content/svg/content/src/DOMSVGLength.cpp
@@ -151,11 +151,17 @@ DOMSVGLength::~DOMSVGLength()
   }
 
   if (mVal) {
-    auto& table = mIsAnimValItem ? sAnimSVGLengthTearOffTable : sBaseSVGLengthTearOffTable;
-    table.RemoveTearoff(mVal);
+    RemoveTearOff();
   }
 }
 
+void
+DOMSVGLength::RemoveTearOff()
+{
+  auto& table = mIsAnimValItem ? sAnimSVGLengthTearOffTable : sBaseSVGLengthTearOffTable;
+  table.RemoveTearoff(mVal);
+}
+
 already_AddRefed<DOMSVGLength>
 DOMSVGLength::GetTearOff(nsSVGLength2* aVal, nsSVGElement* aSVGElement,
                          bool aAnimVal)
@@ -517,7 +523,11 @@ DOMSVGLength::InsertingIntoList(DOMSVGLengthList *aList,
   mList = aList;
   mAttrEnum = aAttrEnum;
   mListIndex = aListIndex;
-  mIsAnimValItem = aIsAnimValItem;
+
+  RemoveTearOff();
+  // We const_cast here to make sure that nobody forgets to call RemoveTearOff
+  // when changing mIsAnimValItem.
+  const_cast<bool&>(mIsAnimValItem) = aIsAnimValItem;
 
   NS_ABORT_IF_FALSE(IndexIsValid(), "Bad index for DOMSVGLength!");
 }
@@ -528,7 +538,11 @@ DOMSVGLength::RemovingFromList()
   mValue = InternalItem().GetValueInCurrentUnits();
   mUnit  = InternalItem().GetUnit();
   mList = nullptr;
-  mIsAnimValItem = false;
+
+  RemoveTearOff();
+  // We const_cast here to make sure that nobody forgets to call RemoveTearOff
+  // when changing mIsAnimValItem.
+  const_cast<bool&>(mIsAnimValItem) = false;
 }
 
 SVGLength
diff --git a/content/svg/content/src/DOMSVGLength.h b/content/svg/content/src/DOMSVGLength.h
index 164dc87..7d6baad 100644
--- a/content/svg/content/src/DOMSVGLength.h
+++ b/content/svg/content/src/DOMSVGLength.h
@@ -182,6 +182,7 @@ public:
   JSObject* WrapObject(JSContext* aCx) MOZ_OVERRIDE;
 
 private:
+  void RemoveTearOff();
 
   nsSVGElement* Element() const {
     return mList->Element();
@@ -221,14 +222,17 @@ private:
 
   uint32_t mListIndex:MOZ_SVG_LIST_INDEX_BIT_COUNT;
   uint32_t mAttrEnum:4; // supports up to 16 attributes
-  uint32_t mIsAnimValItem:1;
 
   // The following members are only used when we're not in a list:
   uint32_t mUnit:5; // can handle 31 units (the 10 SVG 1.1 units + rem, vw, vh, wm, calc + future additions)
+  const bool mIsAnimValItem; // The const-ness is used to prevent modifying this value
+                             // without calling RemoveTearOff.
   float mValue;
 
   // The following members are only used when we have an nsSVGLength2
-  nsSVGLength2* mVal; // kept alive because it belongs to mSVGElement
+  nsSVGLength2* const mVal; // kept alive because it belongs to mSVGElement
+                            // The const-ness is used to prevent modifying this value
+                            // without calling RemoveTearOff.
   nsRefPtr<nsSVGElement> mSVGElement;
 };
 
