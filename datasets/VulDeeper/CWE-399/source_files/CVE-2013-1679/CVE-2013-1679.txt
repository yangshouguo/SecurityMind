diff --git a/dom/plugins/ipc/PluginInstanceChild.cpp b/dom/plugins/ipc/PluginInstanceChild.cpp
--- a/dom/plugins/ipc/PluginInstanceChild.cpp
+++ b/dom/plugins/ipc/PluginInstanceChild.cpp
@@ -2446,18 +2446,20 @@ NPError
 PluginInstanceChild::NPN_NewStream(NPMIMEType aMIMEType, const char* aWindow,
                                    NPStream** aStream)
 {
     AssertPluginThread();
 
     PluginStreamChild* ps = new PluginStreamChild();
 
     NPError result;
-    CallPPluginStreamConstructor(ps, nsDependentCString(aMIMEType),
-                                 NullableString(aWindow), &result);
+    if (!CallPPluginStreamConstructor(ps, nsDependentCString(aMIMEType),
+                                      NullableString(aWindow), &result)) {
+        NS_RUNTIMEABORT("PluginStream constructor failed");
+    }
     if (NPERR_NO_ERROR != result) {
         *aStream = NULL;
         PPluginStreamChild::Call__delete__(ps, NPERR_GENERIC_ERROR, true);
         return result;
     }
 
     *aStream = &ps->mStream;
     return NPERR_NO_ERROR;
diff --git a/dom/plugins/ipc/PluginModuleChild.cpp b/dom/plugins/ipc/PluginModuleChild.cpp
--- a/dom/plugins/ipc/PluginModuleChild.cpp
+++ b/dom/plugins/ipc/PluginModuleChild.cpp
@@ -1050,18 +1050,20 @@ NPError NP_CALLBACK
 
     if (!aNPP) // NULL check for nspluginwrapper (bug 561690)
         return NPERR_INVALID_INSTANCE_ERROR;
 
     nsCString url = NullableString(aRelativeURL);
     StreamNotifyChild* sn = new StreamNotifyChild(url);
 
     NPError err;
-    InstCast(aNPP)->CallPStreamNotifyConstructor(
-        sn, url, NullableString(aTarget), false, nsCString(), false, &err);
+    if (!InstCast(aNPP)->CallPStreamNotifyConstructor(
+           sn, url, NullableString(aTarget), false, nsCString(), false, &err)) {
+        NS_RUNTIMEABORT("StreamNotify constructor failed");
+    }
 
     if (NPERR_NO_ERROR == err) {
         // If NPN_PostURLNotify fails, the parent will immediately send us
         // a PStreamNotifyDestructor, which should not call NPP_URLNotify.
         sn->SetValid(aNotifyData);
     }
 
     return err;
@@ -1161,19 +1163,21 @@ NPError NP_CALLBACK
 
     if (!aBuffer)
         return NPERR_INVALID_PARAM;
 
     nsCString url = NullableString(aRelativeURL);
     StreamNotifyChild* sn = new StreamNotifyChild(url);
 
     NPError err;
-    InstCast(aNPP)->CallPStreamNotifyConstructor(
-        sn, url, NullableString(aTarget), true,
-        nsCString(aBuffer, aLength), aIsFile, &err);
+    if (!InstCast(aNPP)->CallPStreamNotifyConstructor(
+            sn, url, NullableString(aTarget), true,
+            nsCString(aBuffer, aLength), aIsFile, &err)) {
+        NS_RUNTIMEABORT("StreamNotify constructor failed");
+    }
 
     if (NPERR_NO_ERROR == err) {
         // If NPN_PostURLNotify fails, the parent will immediately send us
         // a PStreamNotifyDestructor, which should not call NPP_URLNotify.
         sn->SetValid(aNotifyData);
     }
 
     return err;
