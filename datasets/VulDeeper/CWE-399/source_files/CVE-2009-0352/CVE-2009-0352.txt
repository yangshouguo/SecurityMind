diff --git a/content/xbl/src/nsXBLBinding.cpp b/content/xbl/src/nsXBLBinding.cpp
--- a/content/xbl/src/nsXBLBinding.cpp
+++ b/content/xbl/src/nsXBLBinding.cpp
@@ -720,16 +720,31 @@ nsXBLBinding::GenerateAnonymousContent()
                 // We were unable to place this child.  All anonymous content
                 // should be thrown out.  Special-case template and observes.
 
                 nsINodeInfo *ni = childContent->NodeInfo();
                 nsIAtom *localName = ni->NameAtom();
                 if (ni->NamespaceID() != kNameSpaceID_XUL ||
                     (localName != nsGkAtoms::observes &&
                      localName != nsGkAtoms::_template)) {
+                  // Undo InstallAnonymousContent
+                  PRUint32 childCount = mContent->GetChildCount();
+#ifdef MOZ_XUL
+                  nsCOMPtr<nsIXULDocument> xuldoc(do_QueryInterface(doc));
+#endif
+                  for (PRUint32 k = 0; k < childCount; ++k) {
+                    nsIContent* child = mContent->GetChildAt(k);
+                    child->UnbindFromTree();
+#ifdef MOZ_XUL
+                    if (xuldoc) {
+                      xuldoc->RemoveSubtreeFromDocument(child);
+                    }
+#endif
+                  }
+
                   // Kill all anonymous content.
                   mContent = nsnull;
                   bindingManager->SetContentListFor(mBoundElement, nsnull);
                   bindingManager->SetAnonymousNodesFor(mBoundElement, nsnull);
                   return;
                 }
               }
             }
